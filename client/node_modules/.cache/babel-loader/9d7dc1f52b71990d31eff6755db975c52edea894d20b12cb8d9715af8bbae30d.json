{"ast":null,"code":"import crypto from 'crypto';\n\n// Função para criptografar uma mensagem\nexport const encryptMessage = (message, key) => {\n  const iv = crypto.randomBytes(16); // Initialization Vector\n  const cipher = crypto.createCipheriv('aes-256-cbc', key, iv);\n  let encrypted = cipher.update(message, 'utf8', 'hex');\n  encrypted += cipher.final('hex');\n  return {\n    iv: iv.toString('hex'),\n    encryptedData: encrypted\n  };\n};\n\n// Função para descriptografar uma mensagem\nexport const decryptMessage = (encryptedData, iv, key) => {\n  const decipher = crypto.createDecipheriv('aes-256-cbc', key, Buffer.from(iv, 'hex'));\n  let decrypted = decipher.update(encryptedData, 'hex', 'utf8');\n  decrypted += decipher.final('utf8');\n  return decrypted;\n};\nexport const downloadMedia = async (e, originalImage) => {\n  e.preventDefault();\n  try {\n    fetch(originalImage).then(resp => resp.blob()).then(blob => {\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      const nameSplit = originalImage.split(\"/\");\n      const duplicateName = nameSplit.pop();\n\n      // the filename you want\n      a.download = \"\" + duplicateName + \"\";\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }).catch(error => console.log('Error while downloading the image ', error));\n  } catch (error) {\n    console.log('Error while downloading the image ', error);\n  }\n};\nexport const formatDate = date => {\n  const hours = new Date(date).getHours();\n  const minutes = new Date(date).getMinutes();\n  return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\n};","map":{"version":3,"names":["crypto","encryptMessage","message","key","iv","randomBytes","cipher","createCipheriv","encrypted","update","final","toString","encryptedData","decryptMessage","decipher","createDecipheriv","Buffer","from","decrypted","downloadMedia","e","originalImage","preventDefault","fetch","then","resp","blob","url","window","URL","createObjectURL","a","document","createElement","style","display","href","nameSplit","split","duplicateName","pop","download","body","appendChild","click","revokeObjectURL","catch","error","console","log","formatDate","date","hours","Date","getHours","minutes","getMinutes"],"sources":["C:/Users/kauev/OneDrive/Área de Trabalho/Nova pasta (2)/client/src/utils/common-utils.js"],"sourcesContent":["import crypto from 'crypto';\r\n\r\n// Função para criptografar uma mensagem\r\nexport const encryptMessage = (message, key) => {\r\n    const iv = crypto.randomBytes(16); // Initialization Vector\r\n    const cipher = crypto.createCipheriv('aes-256-cbc', key, iv);\r\n    let encrypted = cipher.update(message, 'utf8', 'hex');\r\n    encrypted += cipher.final('hex');\r\n    return { iv: iv.toString('hex'), encryptedData: encrypted };\r\n};\r\n\r\n// Função para descriptografar uma mensagem\r\nexport const decryptMessage = (encryptedData, iv, key) => {\r\n    const decipher = crypto.createDecipheriv('aes-256-cbc', key, Buffer.from(iv, 'hex'));\r\n    let decrypted = decipher.update(encryptedData, 'hex', 'utf8');\r\n    decrypted += decipher.final('utf8');\r\n    return decrypted;\r\n};\r\n\r\nexport const downloadMedia = async (e, originalImage) => {\r\n    e.preventDefault();\r\n    try {\r\n        fetch(originalImage)\r\n        .then(resp => resp.blob())\r\n        .then(blob => {\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.style.display = 'none';\r\n            a.href = url;\r\n\r\n            const nameSplit = originalImage.split(\"/\");\r\n            const duplicateName = nameSplit.pop();\r\n\r\n            // the filename you want\r\n            a.download = \"\" + duplicateName + \"\";\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n        })\r\n        .catch((error) => console.log('Error while downloading the image ', error))\r\n\r\n    } catch (error) {\r\n        console.log('Error while downloading the image ', error);\r\n    }\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    const hours = new Date(date).getHours();\r\n    const minutes = new Date(date).getMinutes();\r\n    return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}